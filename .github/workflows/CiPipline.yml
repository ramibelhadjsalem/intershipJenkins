name: CI Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'adopt'

    - name: Install .NET Core
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '6.0.x'

    - name: Cache SonarQube packages
      uses: actions/cache@v3
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar

    - name: Run tests
      run: dotnet test

    - name: Analyze code with SonarQube
      env:
        SONAR_TOKEN: ${{ secrets.SONARQUBE_TOKEN }}
      run: |
        dotnet tool install --global dotnet-sonarscanner
        export PATH="$PATH:~/.dotnet/tools"
        dotnet sonarscanner begin /k:"myapp" /d:sonar.host.url="${{ secrets.SONARQUBE_HOST_URL }}" /d:sonar.login="${{ secrets.SONARQUBE_TOKEN }}"
        dotnet build
        dotnet sonarscanner end /d:sonar.login="${{ secrets.SONARQUBE_TOKEN }}"

    - name: Build Docker image
      run: |
        docker build -t ramibhs/intership:${{ github.sha }} .
        echo "DOCKER_IMAGE=ramibhs/intership:${{ github.sha }}" >> $GITHUB_ENV

    - name: Log in to Docker Hub
      run: echo ${{ secrets.DOCKER_HUB_PASSWORD }} | docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} --password-stdin

    - name: Push Docker image to Docker Hub
      run: docker push ramibhs/intership:${{ github.sha }}

    - name: Update Kubernetes deployment YAML
      run: |
        sed -i "s|ramibhs/jenkins:.*|ramibhs/intership:${{ github.sha }}|g" k8s/deployment.yaml

    - name: Commit and push updated deployment.yaml
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        git add k8s/deployment.yaml
        git commit -m "Update deployment image to ramibhs/intership:${{ github.sha }}"
        git push

    - name: Apply Kubernetes deployment
      env:
        KUBECONFIG: ${{ secrets.KUBE_CONFIG_DATA }}
      run: |
        echo "${KUBECONFIG}" | base64 --decode > $HOME/.kube/config
        kubectl apply -f k8s/deployment.yaml -n myapp
